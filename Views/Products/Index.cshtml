@model List<ElectronicsStore.Models.Product>
@{
    ViewData["Title"] = "Sản phẩm";
    var categories = ViewBag.Categories as List<ElectronicsStore.Models.Category>;
    var currentCategory = ViewBag.CurrentCategory as string;
    var currentSearch = ViewBag.CurrentSearch as string;
    var currentMinPrice = ViewBag.CurrentMinPrice as decimal?;
    var currentMaxPrice = ViewBag.CurrentMaxPrice as decimal?;
    var currentSort = ViewBag.CurrentSort as string ?? "name";
}

<div class="container py-4">
    <!-- Header -->
    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-start align-items-lg-center mb-4">
        <div>
            <h1 class="fw-bold mb-2">Sản phẩm</h1>
            <p class="text-muted">
                Tìm thấy @Model.Count sản phẩm
                @if (!string.IsNullOrEmpty(currentSearch))
                {
                    <span> cho từ khóa "@currentSearch"</span>
                }
            </p>
        </div>

        <div class="d-flex align-items-center gap-3 mt-3 mt-lg-0">
            <!-- Sort -->
            <form method="get" class="d-flex align-items-center">
                <input type="hidden" name="category" value="@currentCategory" />
                <input type="hidden" name="search" value="@currentSearch" />
                <input type="hidden" name="minPrice" value="@currentMinPrice" />
                <input type="hidden" name="maxPrice" value="@currentMaxPrice" />
                
                <select name="sort" class="form-select" onchange="this.form.submit()">
                    <option value="name" selected="@(currentSort == "name")">Tên A-Z</option>
                    <option value="price_asc" selected="@(currentSort == "price_asc")">Giá tăng dần</option>
                    <option value="price_desc" selected="@(currentSort == "price_desc")">Giá giảm dần</option>
                    <option value="newest" selected="@(currentSort == "newest")">Mới nhất</option>
                </select>
            </form>

            <!-- Filter Toggle (Mobile) -->
            <button class="btn btn-primary d-lg-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#filtersOffcanvas">
                <i class="fas fa-filter me-2"></i>Bộ lọc
            </button>
        </div>
    </div>

    <div class="row">
        <!-- Sidebar Filters (Desktop) -->
        <div class="col-lg-3 d-none d-lg-block">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">
                        <i class="fas fa-filter me-2"></i>Bộ lọc
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get">
                        <input type="hidden" name="search" value="@currentSearch" />
                        
                        <!-- Category Filter -->
                        <div class="mb-4">
                            <h6 class="fw-semibold mb-3">Danh mục</h6>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="category" value="" 
                                       checked="@(string.IsNullOrEmpty(currentCategory))" onchange="this.form.submit()">
                                <label class="form-check-label">Tất cả</label>
                            </div>
                            @if (categories != null)
                            {
                                @foreach (var category in categories)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="category" value="@category.Slug" 
                                               checked="@(currentCategory == category.Slug)" onchange="this.form.submit()">
                                        <label class="form-check-label">@category.Name</label>
                                    </div>
                                }
                            }
                        </div>

                        <!-- Price Filter -->
                        <div class="mb-4">
                            <h6 class="fw-semibold mb-3">Khoảng giá (VNĐ)</h6>
                            <div class="mb-2">
                                <input type="number" name="minPrice" class="form-control" placeholder="Giá từ" 
                                       value="@currentMinPrice">
                            </div>
                            <div class="mb-3">
                                <input type="number" name="maxPrice" class="form-control" placeholder="Đến giá" 
                                       value="@currentMaxPrice">
                            </div>
                            
                            <!-- Quick price filters -->
                            <div class="d-grid gap-1">
                                <button type="button" class="btn btn-outline-primary btn-sm text-start" 
                                        onclick="setPriceRange(0, 500000)">Dưới 500,000đ</button>
                                <button type="button" class="btn btn-outline-primary btn-sm text-start" 
                                        onclick="setPriceRange(500000, 2000000)">500,000đ - 2,000,000đ</button>
                                <button type="button" class="btn btn-outline-primary btn-sm text-start" 
                                        onclick="setPriceRange(2000000, 10000000)">2,000,000đ - 10,000,000đ</button>
                                <button type="button" class="btn btn-outline-primary btn-sm text-start" 
                                        onclick="setPriceRange(10000000, null)">Trên 10,000,000đ</button>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Áp dụng bộ lọc</button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary w-100 mt-2">Xóa bộ lọc</a>
                    </form>
                </div>
            </div>
        </div>

        <!-- Products Grid -->
        <div class="col-lg-9">
            @if (Model.Any())
            {
                <div class="row g-4">
                    @foreach (var product in Model)
                    {
                        <div class="col-sm-6 col-xl-4">
                            <div class="card h-100 border-0 shadow-sm hover-lift">
                                <div class="card-img-top overflow-hidden position-relative" style="height: 200px;">
                                    <img src="@(product.ImageUrl ?? "https://images.pexels.com/photos/2582932/pexels-photo-2582932.jpeg")" 
                                         alt="@product.Name" class="w-100 h-100 object-fit-cover">
                                    @if (product.IsFeatured)
                                    {
                                        <span class="position-absolute top-0 start-0 badge bg-danger m-2">Nổi bật</span>
                                    }
                                    @if (product.StockQuantity <= 0)
                                    {
                                        <span class="position-absolute top-0 end-0 badge bg-secondary m-2">Hết hàng</span>
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h6 class="card-title fw-semibold">@product.Name</h6>
                                    <p class="card-text text-muted small mb-2">@product.Category?.Name</p>
                                    <p class="card-text text-muted small flex-grow-1">@product.Description</p>
                                    <div class="d-flex justify-content-between align-items-center mt-auto">
                                        <span class="text-primary fw-bold fs-5">@product.Price.ToString("N0") đ</span>
                                        <div class="btn-group">
                                            <a asp-action="Details" asp-route-slug="@product.Slug" 
                                               class="btn btn-outline-primary btn-sm">
                                                Chi tiết
                                            </a>
                                            <button class="btn btn-primary btn-sm" 
                                                    @(product.StockQuantity <= 0 ? "disabled" : "")
                                                    onclick="addToCartFromList(@product.Id)">
                                                <i class="fas fa-cart-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="text-muted mb-4">
                        <i class="fas fa-search fa-4x"></i>
                    </div>
                    <h3 class="fw-semibold text-muted mb-2">Không tìm thấy sản phẩm</h3>
                    <p class="text-muted mb-4">Thử thay đổi bộ lọc hoặc từ khóa tìm kiếm</p>
                    <a href="@Url.Action("Index")" class="btn btn-primary">Xóa tất cả bộ lọc</a>
                </div>
            }
        </div>
    </div>
</div>

<style>
.hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
}

.object-fit-cover {
    object-fit: cover;
}
</style>

<script>
function setPriceRange(min, max) {
    document.querySelector('input[name="minPrice"]').value = min || '';
    document.querySelector('input[name="maxPrice"]').value = max || '';
}

function addToCartFromList(productId) {
    fetch('/Cart/AddToCart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `productId=${productId}&quantity=1`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showToast(data.message, 'success');
            updateCartCount(data.cartItemCount);
        } else {
            showToast(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng', 'error');
    });
}

function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed`;
    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    toast.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
        }
    }, 3000);
}

function updateCartCount(count) {
    const cartBadge = document.getElementById('cart-count');
    if (cartBadge) {
        cartBadge.textContent = count;
    }
}
</script>
@model ElectronicsStore.Models.Cart
@{
    ViewData["Title"] = "Giỏ hàng";
    decimal totalAmount = 0;
    if (Model.CartItems != null)
    {
        totalAmount = Model.CartItems.Sum(ci => ci.Quantity * ci.Product.Price);
    }
}

<div class="container py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item active">Giỏ hàng</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h4 class="mb-0">
                        <i class="fas fa-shopping-cart me-2"></i>
                        Giỏ hàng của bạn
                        @if (Model.CartItems?.Any() == true)
                        {
                            <span class="text-muted">(@Model.CartItems.Sum(ci => ci.Quantity) sản phẩm)</span>
                        }
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.CartItems?.Any() == true)
                    {
                        @foreach (var item in Model.CartItems)
                        {
                            <div class="row align-items-center border-bottom py-3" id="cart-item-@item.Id">
                                <div class="col-md-2">
                                    <img src="@(item.Product.ImageUrl ?? "https://images.pexels.com/photos/2582932/pexels-photo-2582932.jpeg")" 
                                         alt="@item.Product.Name" class="img-fluid rounded">
                                </div>
                                <div class="col-md-4">
                                    <h6 class="mb-1">
                                        <a asp-controller="Products" asp-action="Details" asp-route-slug="@item.Product.Slug" 
                                           class="text-decoration-none">@item.Product.Name</a>
                                    </h6>
                                    <small class="text-muted">@item.Product.Category?.Name</small>
                                    <br>
                                    <small class="text-primary fw-bold">@item.Product.Price.ToString("N0") đ</small>
                                </div>
                                <div class="col-md-3">
                                    <div class="input-group input-group-sm">
                                        <button class="btn btn-outline-secondary" type="button" 
                                                onclick="updateQuantity(@item.Id, @(item.Quantity - 1))">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                        <input type="number" class="form-control text-center" 
                                               value="@item.Quantity" min="1" max="@item.Product.StockQuantity"
                                               id="quantity-@item.Id" 
                                               onchange="updateQuantity(@item.Id, this.value)">
                                        <button class="btn btn-outline-secondary" type="button" 
                                                onclick="updateQuantity(@item.Id, @(item.Quantity + 1))">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                    <small class="text-muted">Còn @item.Product.StockQuantity sản phẩm</small>
                                </div>
                                <div class="col-md-2">
                                    <div class="text-end">
                                        <div class="fw-bold text-primary" id="item-total-@item.Id">
                                            @((item.Quantity * item.Product.Price).ToString("N0")) đ
                                        </div>
                                        <button class="btn btn-sm btn-outline-danger mt-1" 
                                                onclick="removeItem(@item.Id)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <div class="text-end mt-3">
                            <a asp-controller="Products" asp-action="Index" class="btn btn-outline-primary">
                                <i class="fas fa-arrow-left me-1"></i>Tiếp tục mua sắm
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shopping-cart fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted mb-3">Giỏ hàng của bạn đang trống</h5>
                            <p class="text-muted mb-4">Hãy thêm một số sản phẩm vào giỏ hàng để tiếp tục mua sắm</p>
                            <a asp-controller="Products" asp-action="Index" class="btn btn-primary">
                                <i class="fas fa-shopping-bag me-2"></i>Bắt đầu mua sắm
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        @if (Model.CartItems?.Any() == true)
        {
            <div class="col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-header bg-white">
                        <h5 class="mb-0">Tóm tắt đơn hàng</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tạm tính:</span>
                            <span id="subtotal">@totalAmount.ToString("N0") đ</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Phí vận chuyển:</span>
                            <span class="text-success">Miễn phí</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Tổng cộng:</strong>
                            <strong class="text-primary fs-5" id="total">@totalAmount.ToString("N0") đ</strong>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <a asp-controller="Checkout" asp-action="Index" class="btn btn-primary btn-lg">
                                <i class="fas fa-credit-card me-2"></i>Thanh toán
                            </a>
                        </div>
                        
                        <div class="mt-3 p-3 bg-light rounded">
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-truck text-success me-2"></i>
                                <small>Giao hàng miễn phí cho đơn hàng trên 500,000đ</small>
                            </div>
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-shield-alt text-primary me-2"></i>
                                <small>Bảo hành chính hãng</small>
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="fas fa-undo text-info me-2"></i>
                                <small>Đổi trả trong 7 ngày</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
function updateQuantity(cartItemId, newQuantity) {
    if (newQuantity < 1) return;
    
    fetch('/Cart/UpdateQuantity', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `cartItemId=${cartItemId}&quantity=${newQuantity}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById(`quantity-${cartItemId}`).value = newQuantity;
            document.getElementById(`item-total-${cartItemId}`).textContent = data.itemTotal + ' đ';
            document.getElementById('subtotal').textContent = data.cartTotal + ' đ';
            document.getElementById('total').textContent = data.cartTotal + ' đ';
            showToast('Đã cập nhật số lượng sản phẩm', 'success');
        } else {
            showToast(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('Có lỗi xảy ra khi cập nhật số lượng', 'error');
    });
}

function removeItem(cartItemId) {
    if (!confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?')) {
        return;
    }
    
    fetch('/Cart/RemoveItem', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `cartItemId=${cartItemId}`
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            document.getElementById(`cart-item-${cartItemId}`).remove();
            document.getElementById('subtotal').textContent = data.cartTotal + ' đ';
            document.getElementById('total').textContent = data.cartTotal + ' đ';
            document.getElementById('cart-count').textContent = data.cartItemCount;
            showToast(data.message, 'success');
            
            if (data.cartItemCount === 0) {
                setTimeout(() => {
                    location.reload();
                }, 1000);
            }
        } else {
            showToast(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showToast('Có lỗi xảy ra khi xóa sản phẩm', 'error');
    });
}

function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed`;
    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    toast.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
        }
    }, 3000);
}
</script>